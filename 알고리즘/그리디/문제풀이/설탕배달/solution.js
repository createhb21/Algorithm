const fs = require("fs");
let input = fs.readFileSync("./input.txt").toString().trim().split("\n");

// 현실에서 적용할 수 있는 가장 단순한 공식을 생각해 보자.
// 어떤 수를 0으로 만들어야 하는 상황에서 두 가지 연산을 사용할 수 있다.
// 1. 값에서 5를 빼기
// 2. 값에서 3을 빼기
// [문제 해결 아이디어] 가능하면 5을 우선적으로 빼는 것이 효과적일 것이다.
// [문제 해결 아이디어]
// 1) 현재 값이 5로 나누어 떨어지는 경우, 5로 나누면 될 것이다.
// 2) 그렇지 않다면, 기존의 값이 5로 나누어 떨어지는 값이 될 때까지 3을 빼준 뒤에 1)을 수행한다.
// 3kg 봉지를 최대한 적게 사용하자.

// 이 문제를 수학적으로 생각해보면 다음과 같다.
// 3A + 5B = N
// 목표: B가 가장 큰 경우를 찾는 것
// 가장 큰 B를 찾는 것은 가장 작은 A를 찾는 문제로 이해할 수 있다.
// 해결 방법: 반복적으로 3을 빼면서 (A를 1씩 증가시키며) 5로 나누어 떨어질 때를 찾으면 된다.
// 이러한 방법으로 항상 최적의 해를 보장할 수 있다.

// -----------------------------------

// 18

let n = Number(input[0]); // 봉지 kg
let cnt = 0;
let flag = false;

while (n >= 0) {
  // 더 이상 반복할 수 없을 때까지 반복
  // n이 0이 되었거나, n으로 나누어 떨어지는 값인 경우
  if (n == 0 || n % 5 == 0) {
    cnt += parseInt(n / 5); // 5로 나눈 몫을 더하기
    console.log(cnt);
    flag = true;
    break;
  }
  n -= 3;
  cnt += 1;
}
if (!flag) {
  console.log(-1);
}
