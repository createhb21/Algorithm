const fs = require("fs");
let input = fs.readFileSync("./input.txt").toString().trim().split("\n");

// 문제를 요야하자면 다음과 같다.
// 덧셈(+)과 뺄셈(-) 연산자로만 구성된 수식이 있을 때, 괄호를 적절히 넣어 값을 최소화한다.
// [문제 해결 아이디어] 뺄셈(-) 연산자를 기준으로 최대한 많은 수를 묶는다.

// 예시 1
// 현재 예시에서는 애초에 마이너스가 존재하지 않으므로, 처리할 것이 없다.
// 10+20+30+40=100

// 예시 2
// 이 경우는 애초에 마닝어스가 존재한다.
// 어떻게 괄호를 묶어야. 가장 결과를 작게 만들 수 있을끼?
// 55-50+40 -> 55-(50+40) = -35

// 예시 3
// 여러 개의 마니어스가 존재하는 상황을 고려해 보자.
// 어떻게 괄호를 묶어야, 가장 결과를 작게 만들 수 있을까 ?
// 90+30-20+50-30+60-70+30+20
// -> (90+30)-(20+50)-(30+60)-(70+30+20) = -160

// -----------------------------------

// 55-50+40

// 뺄셈 연산자를 기준으로 나누어 여러 그룹 만들기
let groups = input[0].split("-");
console.log(groups);
let answer = 0;
for (let i = 0; i < groups.length; i++) {
  // 각 그룹 내부에서 덧셈 연산 적용
  let cur = groups[i]
    .split("+")
    .map(Number)
    .reduce((a, b) => a + b);
  if (i == 0) answer += cur; // 첫 번째 그룹은 항상 덧셈(+)
  else answer -= cur; // 두 번째 그룸부터 뺄셈
}

console.log(answer);
